[tool.black]
line-length = 79
py36 = true
include = '\.pyi?$'
exclude = '''
/(
    \.(git|hg|mypy_cache|tox|venv)
  | _?build
  | dist
)/
'''
skip-string-normalization = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.5"
version_files = [
    "pyproject.toml:version"
]

[tool.poetry]
build = "build.py"
name = "hyperscan"
version = "0.1.5"
description = "Python bindings for Hyperscan."
authors = ["David Gidwani <david.gidwani@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/darvid/python-hyperscan"
repository = "https://github.com/darvid/python-hyperscan"
documentation = "https://python-hyperscan.rtfm.io"
keywords = ["regex", "hypercan"]
include = ["README.md", "CHANGELOG.md"]
packages = [
  { include = "hyperscan", from = "src" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: Implementation :: CPython",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows"
]

[tool.poetry.dependencies]
python = ">=3.6.1,<4.0"

[tool.poetry.dev-dependencies]
pytest = "^6.1.2"
pytest-mock = "^3.3.1"
requests = "^2.25.0"
urllib3 = "^1.26.2"
tox = "^3.20.1"
commitizen = "^2.10.0"
pre-commit = "^2.9.2"
python-semantic-release = "^7.6.0"

[tool.semantic_release]
version_variable = [
  "pyproject.toml:version",
]
# XXX: python-semantic-release runs in a GH Action, where we cannot install
# build deps easily, and attempting to build a wheel from source would fail.
# Since there is currently no way to tell python-semantic-release to use
# an existing dist, we just pip install the artifact which should be copied
# over from the build job as an additional, albeit redundant sanity check.
build_command = "pip install -I --no-index -f=./dist -f=/github/workspace/dist hyperscan"
remove_dist = false

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
